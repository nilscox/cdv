language: node_js
node_js: 10

cache:
  yarn: true
  directories:
    - frontend/public

git:
  depth: false

env:
  global:
    - NODE_ENV="production"
    - BUILD_ID_FILE="$TRAVIS_BUILD_DIR/frontend/public/travis-build-id"

before_deploy:
  - openssl aes-256-cbc -K $encrypted_ad988ee53a3a_key -iv $encrypted_ad988ee53a3a_iv -in $TRAVIS_BUILD_DIR/scripts/deploy-travis.enc -out /tmp/deploy-travis -d
  - chmod 600 /tmp/deploy-travis
  - eval "$(ssh-agent -s)"
  - ssh-add /tmp/deploy-travis
  - echo "$DEPLOY_KNOWN_HOSTS" >> $HOME/.ssh/known_hosts

stages:
  - build
  - test
  - name: deploy
    if: ((branch = master) OR (branch = dev)) AND (NOT (type = pull_request))

install: yarn --production false

jobs:
  include:
    - stage: test
      name: "test API"
      before_install: cd api
      script: yarn lint
    - name: "test frontend"
      before_install: cd frontend
      script: yarn lint

    - stage: build
      name: "build API"
      before_install: cd api
      script: yarn build
    - stage: build
      name: "build frontend"
      before_install: cd frontend
      script:
        - yarn clean
        - yarn build
        - echo "$TRAVIS_BUILD_ID" > "$BUILD_ID_FILE"
    - name: "build extension"
      before_install: cd chrome-extension
      script: yarn build

    - stage: deploy
      name: "deploy frontend"
      install: skip
      script:
        - if test ! -f "$BUILD_ID_FILE" -o "$(cat "$BUILD_ID_FILE")" != "$TRAVIS_BUILD_ID"; then echo 'invalid build id' >&2; exit 1; fi
        - cp -r frontend/public ~/frontend
      before_cache: rm -rf frontend/public
      deploy:
        - provider: script
          skip_cleanup: true
          script: scripts/deploy-frontend.sh ~/frontend staging
          on:
            branch: dev

        - provider: script
          skip_cleanup: true
          script: scripts/deploy-frontend.sh ~/frontend production
          on:
            branch: master
