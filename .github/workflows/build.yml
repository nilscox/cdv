name: build

on: [push]

env:
  API_IMAGE: nilscox/reagir-information-api
  EXTENSION_IMAGE: nilscox/reagir-information-extension

jobs:

  api:
    name: build api
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: nilscox/reagir-information-api:${{ github.sha }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: api

  extension:
    name: build extension
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: nilscox/reagir-information-extension:${{ github.sha }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: extension

  e2e:
    name: end-to-end tests
    runs-on: ubuntu-latest
    needs: [api, extension]
    steps:
    - uses: actions/checkout@v1
    - run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --abort-on-container-exit
      working-directory: ./e2e
      env:
        GIT_SHA: ${{ github.sha }}

  publish-api-staging:
    name: publish api docker image staging
    runs-on: ubuntu-latest
    needs: [api, e2e]
    if: github.ref == 'refs/heads/dev'
    steps:
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $API_IMAGE:${{ github.sha }}
      - run: docker tag $API_IMAGE:${{ github.sha }} $API_IMAGE:dev
      - run: docker push $API_IMAGE:dev

  publish-api-production:
    name: publish api docker image production
    runs-on: ubuntu-latest
    needs: [api, e2e]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $API_IMAGE:${{ github.sha }}
      - run: docker tag $API_IMAGE:${{ github.sha }} $API_IMAGE:master
      - run: docker push $API_IMAGE:master

  publish-extension-staging:
    name: publish extension docker image staging
    runs-on: ubuntu-latest
    needs: [extension, e2e]
    if: github.ref == 'refs/heads/dev'
    steps:
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $EXTENSION_IMAGE:${{ github.sha }}
      - run: docker tag $EXTENSION_IMAGE:${{ github.sha }} $EXTENSION_IMAGE:dev
      - run: docker push $EXTENSION_IMAGE:dev

  publish-extension-production:
    name: publish extension docker image production
    runs-on: ubuntu-latest
    needs: [extension, e2e]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $EXTENSION_IMAGE:${{ github.sha }}
      - run: docker tag $EXTENSION_IMAGE:${{ github.sha }} $EXTENSION_IMAGE:master
      - run: docker push $EXTENSION_IMAGE:master
