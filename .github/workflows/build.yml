name: build

on: [push]

env:
  API_IMAGE: nilscox/zetecom-api
  APP_IMAGE: nilscox/zetecom-app

jobs:

  # build

  api:
    name: build api
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        image_name: nilscox/zetecom-api
        image_tag: ${{ github.sha }}
        context: ./api

  app:
    name: build app
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        image_name: nilscox/zetecom-app
        image_tag: ${{ github.sha }}
        context: ./app

  extension:
    name: build extension
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
    - uses: actions/checkout@v1
    - run: if [ '${{ github.ref }}' = 'refs/heads/master' ]; then echo "environment=production" >> $GITHUB_ENV; fi
    - run: if [ '${{ github.ref }}' = 'refs/heads/dev' ]; then echo "environment=staging" >> $GITHUB_ENV; fi
    - run: echo "extension_version=$(node -e $'console.log(require(\'./extension/package.json\').version)')" >> $GITHUB_ENV
    - run: yarn zip "$environment"
      working-directory: ./extension
    - run: echo "extension_zip=zetecom-extension-${{ env.environment }}-${{ env.extension_version }}" >> $GITHUB_ENV
    - run: mkdir -p artifacts/build && cd artifacts/build && unzip "../../extension/$extension_zip"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.extension_zip }}
        path: artifacts/build
    - run: echo "extension_sources_zip=zetecom-extension-${{ env.environment }}-sources-${{ env.extension_version }}" >> $GITHUB_ENV
    - run: mkdir -p artifacts/sources && cd artifacts/sources && unzip "../../extension/$extension_sources_zip"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.extension_sources_zip }}
        path: artifacts/sources

  website:
    name: build website
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        image_name: nilscox/zetecom-website
        image_tag: ${{ github.sha }}
        context: ./website

  # e2e

  api-e2e:
    name: api end-to-end tests
    runs-on: ubuntu-latest
    needs: [api]
    steps:
    - uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '11.5'
        postgresql db: 'test'
        postgresql user: 'root'
        postgresql password: 'root'
    - run: docker run --network=host nilscox/zetecom-api:${{ github.sha }} yarn test:intg
    - run: docker run --network=host nilscox/zetecom-api:${{ github.sha }} yarn test:e2e

  e2e:
    name: end-to-end tests
    runs-on: ubuntu-latest
    needs: [api, app, website]
    steps:
    - uses: actions/checkout@v1
    - run: yarn
      working-directory: ./e2e
    - run: yarn start:ci
      working-directory: ./e2e
      env:
        GIT_SHA: ${{ github.sha }}
    - uses: codecov/codecov-action@v1
      if: success()
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: cypress-artifacts
        path: e2e/artifacts

  # publish

  publish-api:
    name: publish api docker image
    runs-on: ubuntu-latest
    needs: [api-e2e, e2e]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - run: ref=${{ github.ref }}; echo "tag=${ref#refs/heads/}" >> $GITHUB_ENV
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $API_IMAGE:${{ github.sha }}
      - run: docker tag $API_IMAGE:${{ github.sha }} "$API_IMAGE:$tag"
      - run: docker push "$API_IMAGE:$tag"

  publish-app:
    name: publish app docker image
    runs-on: ubuntu-latest
    needs: [e2e]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - run: ref=${{ github.ref }}; echo "tag=${ref#refs/heads/}" >> $GITHUB_ENV
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $APP_IMAGE:${{ github.sha }}
      - run: docker tag $APP_IMAGE:${{ github.sha }} "$APP_IMAGE:$tag"
      - run: docker push "$APP_IMAGE:$tag"
