version: '3.4'
services:

  postgresql:
    image: postgres:11.5
    container_name: ri-postgres
    hostname: ri-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: db


  api:
    container_name: ri-api
    hostname: ri-api
    ports:
      - 3000:80
    volumes:
      - ./avatars:/app/avatars
      - ./email-templates:/app/email-templates:ro
    command: bash -c "yarn wait-on tcp:ri-postgres:5432 && yarn start:prod"
    environment:
      REFLECT_ORIGIN: 'true'
      APP_URL: http://localhost:8000
      WEBSITE_URL: http://localhost:8080
      DB_HOST: ri-postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASS: root
      DB_NAME: db
      DB_SYNC: 'true'
      DB_ENTITIES: ./dist/src/**/*.entity.js
      DB_MIGRATIONS_DIR: ./dist/migrations/*.js
      DB_DEBUG: 'false'
      EMAIL_HOST: domain.tld
      EMAIL_USER: username
      EMAIL_PASSWORD: password
      EMAIL_BYPASS: 'true'
      EMAIL_ACCOUNT_VERIFICATION: 'false'
      EMAIL_ACCOUNT_AUTHORIZATION: 'false'
      SESSION_SECRET: sekret
      EMAIL_TEMPLATE_DIR: /app/email-templates
      USER_AVATAR_DESTINATION: /app/avatars


  restoredb:
    container_name: ri-restoredb
    hostname: ri-restoredb
    ports:
      - 4242:80
    volumes:
      - ./api/scripts:/app/scripts
    command: bash -c "yarn start:restoredb"
    environment:
      NODE_ENV: production
      PORT: 80
      API_URL: http://ri-api
      DB_HOST: ri-postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASS: root
      DB_NAME: db
      DB_SYNC: 'true'
      DB_ENTITIES: ./dist/src/**/*.entity.js
      DB_MIGRATIONS_DIR: ./dist/migrations/*.js
      DB_DEBUG: 'false'


  app:
    container_name: ri-app
    hostname: ri-app
    ports:
      - 8000:80
    volumes:
      - ./avatars:/var/www/avatars:ro
    environment:
      API_URL: http://localhost:3000
      WEBSITE_URL: http://localhost:8080
